# Generated by Django 5.2.4 on 2025-08-08 05:22

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(blank=True, max_length=150, null=True, verbose_name='이름')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='사용자')),
                ('name', models.CharField(max_length=150, verbose_name='이름')),
                ('age', models.PositiveSmallIntegerField(verbose_name='나이')),
                ('gender', models.CharField(choices=[('M', '남성'), ('F', '여성'), ('O', '기타')], max_length=1, verbose_name='성별')),
            ],
            options={
                'verbose_name': '사용자 추가 정보',
                'verbose_name_plural': '사용자 추가 정보 목록',
                'db_table': 'users_userinfo',
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=100, verbose_name='지역명')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 시각')),
                ('transportation', models.CharField(blank=True, max_length=100, null=True, verbose_name='이동수단')),
                ('companion', models.CharField(blank=True, max_length=100, null=True, verbose_name='동행자')),
                ('adjectives', models.TextField(blank=True, null=True, verbose_name='선택한 형용사')),
                ('summary', models.TextField(blank=True, null=True, verbose_name='AI 여행 요약')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trips', to=settings.AUTH_USER_MODEL, verbose_name='사용자')),
            ],
            options={
                'verbose_name': '여행 정보',
                'verbose_name_plural': '여행 정보 목록',
                'db_table': 'users_trip',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VisitedContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_id', models.IntegerField(verbose_name='콘텐츠 ID')),
                ('title', models.CharField(max_length=200, verbose_name='방문지 이름')),
                ('first_image', models.URLField(blank=True, max_length=512, null=True, verbose_name='대표 이미지 URL')),
                ('addr1', models.CharField(blank=True, max_length=255, null=True, verbose_name='주소')),
                ('mapx', models.DecimalField(decimal_places=20, max_digits=30, verbose_name='경도')),
                ('mapy', models.DecimalField(decimal_places=20, max_digits=30, verbose_name='위도')),
                ('overview', models.TextField(blank=True, null=True, verbose_name='개요')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='저장 시각')),
                ('hashtags', models.TextField(blank=True, null=True, verbose_name='해시태그')),
                ('recommend_reason', models.TextField(blank=True, null=True, verbose_name='추천이유')),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.trip', verbose_name='여행')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='사용자')),
            ],
            options={
                'verbose_name': '방문한 여행 콘텐츠',
                'verbose_name_plural': '방문한 여행 콘텐츠 목록',
                'db_table': 'users_visited_content',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Bookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_id', models.IntegerField(verbose_name='콘텐츠 ID')),
                ('title', models.CharField(max_length=200, verbose_name='방문지 이름')),
                ('first_image', models.URLField(blank=True, max_length=512, null=True, verbose_name='대표 이미지 URL')),
                ('addr1', models.CharField(blank=True, max_length=255, null=True, verbose_name='주소')),
                ('overview', models.TextField(blank=True, null=True, verbose_name='개요')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='북마크 생성 시각')),
                ('hashtags', models.TextField(blank=True, null=True, verbose_name='해시태그')),
                ('recommend_reason', models.TextField(blank=True, null=True, verbose_name='추천이유')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to=settings.AUTH_USER_MODEL, verbose_name='사용자')),
            ],
            options={
                'verbose_name': '북마크',
                'verbose_name_plural': '북마크 목록',
                'db_table': 'users_bookmark',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'content_id')},
            },
        ),
    ]
